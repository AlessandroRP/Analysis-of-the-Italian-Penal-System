#NB Questo è un file R Markdown

---
title: "Time Series"
output: html_document
date: "2024-11-28"
editor_options: 
  chunk_output_type: console
---

```{r}
#INITIALIZE
library(readr)
library(dplyr)
library(readxl)

#PCA
library(FactoMineR)
library(factoextra)

#UMAP
library(umap)
library(tidyverse)

#PLOT
library(ggplot2)

#ARIMA
library(forecast)

```

```{r EDA}
DATA <- read_excel("C:/Users/Aless/Desktop/Magistrale/I° ANNO/Management Tools for Business Data Analyst/[00]PROJECT/DATASETS/[02]Detenuti italiani e stranieri 1991 - 2024.xlsx")
#[02]Detenuti italiani e stranieri 1991 - 2024
DATA <- data.frame(DATA)

#Filtering columns and renaming them
DATA <- DATA[c(1,2,3,4,5)]
colnames(DATA)[1] <- "Data_Rilevazione"

#Converting data into numeric and first column into date format
DATA <- DATA %>%mutate(across(-1, as.numeric))
DATA[, 1] <- as.Date(DATA[, 1], format = "%Y-%m")

#Plot the data
ggplot(DATA, aes(x = Data_Rilevazione)) +
  geom_line(aes(y = Imputati, color = "Imputati"), size = 0.8) +
  geom_line(aes(y = Condannati, color = "Condannati"), size = 0.8) +
  geom_line(aes(y = Internati, color = "Internati"), size = 0.8) +
  geom_line(aes(y = Totale, color = "Totale"), size = 1) +
  theme_minimal() +
  scale_x_date(date_breaks = "4 years", date_labels = "%Y") +
  scale_y_continuous(breaks = seq(0, 70000, by = 10000), 
                     labels = function(x) paste0(x / 1000, "k")) +
  scale_color_manual(values = c("Imputati" = "red", 
                                "Condannati" = "blue", 
                                "Internati" = "green", 
                                "Totale" = "orange"),
                     breaks = c("Totale", "Condannati", "Imputati", "Internati")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(color = "Category", x = "", y = "Numero di Persone") +
  theme(legend.position = "bottom")

```

```{r ARIMA COMPARISON}
#Creating a TS
ts_DATA=as.ts(DATA$Total, frequency = 2, start = c(1991,1))

ggtsdisplay(ts_DATA)

ggAcf(ts_DATA,lag.max = 70) +theme_bw()+ylab(label="Totale")+
  labs(title="ACF")

ggPacf(ts_DATA,lag.max = 70)+theme_bw()+ylab(label="Totale")+
  labs(title="PACF")


#AUTO ARIMA
ARIMA_model <- auto.arima(ts_DATA,stepwise=FALSE,
                          approximation=FALSE,seasonal=F)

ggAcf(ARIMA_model$residuals,lag.max = 60)+
  ggtitle("ACF of ARIMA Model Residuals") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, 
                                  face = "bold"))
ggPacf(ARIMA_model$residuals,lag.max = 60)+
  ggtitle("PACF of ARIMA Model Residuals") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, 
                                  face = "bold"))
#Residuals should be comparable to white noises.

#To evaluate the model:
summary(ARIMA_model) #AIC, AICc and BIC

Box.test(ARIMA_model$residuals, lag = 60, type = "Lj")
#Since the p-value is very high we fail to reject the null hypothesis.
#There is no significant autocorrelation in the residuals at the 60 lags tested. Therefore, the residuals appear to behave like white noise, meaning that the ARIMA model has appropriately captured the underlying time series structure and the residuals are random with no remaining patterns.

DATA$ARIMA=fitted(ARIMA_model)
#Essential for plotting the ARIMA model’s fitted values alongside the actual data (Totale).
#Without this line, the ARIMA values would not exist in DATA, and the ggplot call would fail since it tries to access DATA$ARIMA.

ARIMA_plot<-ggplot(DATA,aes(x=Data_Rilevazione))+
  geom_point(aes(y=Totale),alpha=0.6)+
  geom_line(aes(y=Totale,group = 1),color="black",alpha=0.6)+
  geom_point(aes(y=ARIMA),color="darkred")+
  geom_line(aes(y=ARIMA,group = 1),color="darkred")+
  theme_minimal()+
  xlab(label = "")+
  ylab(label = "Numero di Persone")+
  scale_x_date(date_breaks = "4 years", date_labels = "%Y")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
ARIMA_plot


#MANUAL ARIMA
ts_DATA=as.ts(DATA$Total, frequency = 2, start = c(1991,1))
ts_DATA <- diff(ts_DATA, differences = 2)

ggtsdisplay(ts_DATA)
ggAcf(ts_DATA,lag.max = 70)+theme_bw()+ylab(label="Totale")+
  labs(title="Differenciated ACF")
ggPacf(ts_DATA,lag.max = 70)+theme_bw()+ylab(label="Totale")+
  labs(title="Differenciated PACF")

ARIMA_model_2 <- Arima(ts_DATA, order=c(1,2,7))

ggAcf(ARIMA_model_2$residuals,lag.max = 60)+
  ggtitle("ACF of ARIMA Model Residuals") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, 
                                  face = "bold"))
ggPacf(ARIMA_model_2$residuals,lag.max = 60)+
  ggtitle("PACF of ARIMA Model Residuals") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, 
                                  face = "bold"))

summary(ARIMA_model_2)
Box.test(ARIMA_model_2$residuals, lag = 60, type = "Lj")

DATA$ARIMA=fitted(ARIMA_model_2)
ARIMA_plot<-ggplot(DATA,aes(x=Data_Rilevazione))+
  geom_point(aes(y=Totale),alpha=0.6)+
  geom_line(aes(y=Totale,group = 1),color="black",alpha=0.6)+
  geom_point(aes(y=ARIMA),color="darkred")+
  geom_line(aes(y=ARIMA,group = 1),color="darkred")+
  theme_minimal()+
  xlab(label = "")+
  ylab(label = "Numero di Persone")+
  scale_x_date(date_breaks = "4 years", date_labels = "%Y")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
ARIMA_plot

```


```{r ARIMA FORECAST}

ARIMA_forecast <- forecast(ARIMA_model, h = 15)
#h stands for the number of periods to forecast, what we must understand is how to compare a period to a quantity of time.

autoplot(ARIMA_forecast) + 
  theme_minimal() + 
  ggtitle("ARIMA Model Forecast") + 
  xlab("") + 
  ylab("Total") +
  scale_x_continuous(breaks = scales::pretty_breaks(n = 12), 
                     labels = function(x) as.integer(1991 + (x-1)/2)) +
  scale_y_continuous(breaks = seq(20000, 80000, by = 20000), 
                     labels = function(x) paste0(x / 1000, "k")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
