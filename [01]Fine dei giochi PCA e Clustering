---
title: "R Notebook"
output: html_notebook
editor_options: 
  chunk_output_type: console
---

Data Preparation
```{r}

options(scipen = 99999999)
library(cluster)
library(ComplexUpset)
library(ggrepel)
library(readr)
library(readxl)
library(ggplot2)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(tidyr)
library(dbscan)
library(reshape2)
library(plotly)
library(RColorBrewer)
# ~

# Caricamento del file Excel
data <- read_excel("C:/Users/User/OneDrive/Desktop/Università/MAGISTRALE/MTBDA/Progetto/[01]DB Esecuzione penale esterna.xlsx", na= '-')

# Sostituzione valori da stringa a numerici
data$"In carico all'inizio dell'anno da periodi precedenti" <- as.numeric(data$"In carico all'inizio dell'anno da periodi precedenti")
data$"Presi in carico nell'anno" <- as.numeric(data$"Presi in carico nell'anno")
data$"Totale soggetti in carico" <- as.numeric(data$"Totale soggetti in carico")
data$"Affidamento in prova al servizio sociale" <- as.numeric(data$"Affidamento in prova al servizio sociale")
data$"Detenzione domiciliare" <- as.numeric(data$"Detenzione domiciliare")
data$Semilibertà <- as.numeric(data$Semilibertà)
data$Semidetenzione <- as.numeric(data$Semidetenzione)
data$"Libertà controllata" <- as.numeric(data$"Libertà controllata")
data$"Detenzione domiciliare sostitutiva" <- as.numeric(data$"Detenzione domiciliare sostitutiva")
data$"Semilibertà sostitutiva" <- as.numeric(data$"Semilibertà sostitutiva")
data$"Lavoro di pubblica utilità sostitutivo" <- as.numeric(data$"Lavoro di pubblica utilità sostitutivo")
data$"Libertà vigilata" <- as.numeric(data$"Libertà vigilata")
data$"Lavoro di pubblica utilità - violazione legge sugli stupefacenti" <- as.numeric(data$"Lavoro di pubblica utilità - violazione legge sugli stupefacenti")
data$"Lavoro di pubblica utilità - violazione codice della strada" <- as.numeric(data$"Lavoro di pubblica utilità - violazione codice della strada")
data$"Sospensione condizionale della pena" <- as.numeric(data$"Sospensione condizionale della pena")
data$"Messa alla prova" <- as.numeric(data$"Messa alla prova")

# Merge colonne Lavoro di pubblica utilità
# Trova le colonne che contengono "Lavoro di pubblica utilità"
utilita_cols <- grep("Lavoro di pubblica utilità", colnames(data), value = TRUE)
# Visualizza le colonne trovate
print(utilita_cols)  
# Crea una nuova colonna come somma di tutte le colonne trovate
data$Lavoro_pubblica_utilita_totale <- rowSums(data[, utilita_cols], na.rm = TRUE)
# Verifica il risultato
head(data[, c(utilita_cols, "Lavoro_pubblica_utilita_totale")])

# Filtraggio colonne 
data <- data[c(1,2,3,4,5,7,8,15,19,20)]

# Selezione delle variabili numeriche tralasciando l'anno (non è di interesse con la correlazione nei dati (studiamo i trend in un'altra analisi))
data_numeric <- data %>% select(-Region, -Municipality, -Year)

# Sostituzione dei NA con la media delle colonne
data_cleaned <- data_numeric %>%
  mutate(across(everything(), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))

```


PCA + Interpretation
```{r}

# Standardizzazione delle variabili numeriche
data_scaled <- scale(data_cleaned)

# Calcolo delle PCA
pca_result <- PCA(data_scaled, graph = FALSE)

# Grafico della varianza spiegata
fviz_eig(pca_result, addlabels = TRUE) +
  labs(
    title = "Scree Plot of PCA",           # Cambia il titolo
    x = "Principal Component",             # Cambia il nome dell'asse x
    y = "Percentage of Explained Variances"                      # Cambia il nome dell'asse y
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Centra il titolo
    axis.title = element_text(size = 12)  # Modifica la dimensione del testo degli assi
  ) +
  scale_fill_manual(values = "steelblue")  # Imposta il colore delle barre come skyblue
# Biplot per visualizzare le variabili
fviz_pca_var(pca_result, col.var = "black")
# Grafico del contributo delle variabili
fviz_cos2(pca_result, choice = "var", axes = 1:2)
# Biplot con variabili colorate in base al cos²
fviz_pca_var(pca_result, col.var = "cos2",
             gradient.cols = c("black", "orange", "green"),
             repel = TRUE)

#Proiezione delle osservazioni sulle prime due componenti principali
pca_data <- data.frame(pca_result$ind$coord)
ggplot(pca_data, aes(x = Dim.1, y = Dim.2)) +
  geom_point() +
  theme_minimal() +
  labs(title = "Proiezione sulle prime due componenti principali",
       x = "PCA 1", y = "PCA 2")

# Aggiunta colonne Region, Municipality e Year
pca_data$Region <- data$Region
pca_data$Municipality <- data$Municipality
pca_data$Year <- data$Year

# Andiamo a mettere i colori alle occorrenze delle varie regioni
ggplot(pca_data, aes(x = Dim.1, y = Dim.2, color = Region)) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(title = "Proiezione con regioni colorate (palette personalizzata)",
       x = "PCA 1", y = "PCA 2") +
  scale_color_manual(values = c(
    "red", "blue", "green", "orange", "purple", "brown", "pink", "cyan", "yellow", "black",
    "darkred", "darkblue", "darkgreen", "gold", "violet", "chocolate", "turquoise", "gray", "darkorange", "navy"
  ))

# Ora vado ad identificare quali sono le variabili sotto a PCA 1/2/3
# Loadings delle variabili
loadings <- pca_result$var$coord
# Visualizza i loadings per le prime tre componenti
head(loadings[, 1:3])
# Ordina le variabili in base all'importanza per PCA 1
loading_pca1 <- loadings[order(abs(loadings[, 1]), decreasing = TRUE), 1]
# Ordina per PCA 2
loading_pca2 <- loadings[order(abs(loadings[, 2]), decreasing = TRUE), 2]
# Ordina per PCA 3
loading_pca3 <- loadings[order(abs(loadings[, 3]), decreasing = TRUE), 3]
# Visualizza i risultati
loading_pca1
loading_pca2
loading_pca3

# Visualizza il contributo delle variabili per PCA 1 e PCA 2
fviz_pca_var(pca_result, axes = c(1, 2),
             col.var = "contrib",
             gradient.cols = c("blue", "yellow", "red"),
             repel = TRUE) +
  labs(title = "Contributo delle variabili (PCA 1 e PCA 2)")
# Visualizza il contributo per PCA 3
fviz_pca_var(pca_result, axes = c(1, 3),
             col.var = "contrib",
             gradient.cols = c("blue", "yellow", "red"),
             repel = TRUE) +
  labs(title = "Contributo delle variabili (PCA 1 e PCA 3)")

# Funzione per creare un grafico dei loadings per una componente specifica
plot_loadings <- function(loadings_sorted, pca_num) {
  loadings_df <- data.frame(Variable = names(loadings_sorted), Loading = loadings_sorted)
  ggplot(loadings_df, aes(x = reorder(Variable, Loading), y = Loading)) +
    geom_bar(stat = "identity", fill = "steelblue") +
    coord_flip() +  # Per ruotare il grafico
    labs(title = paste("Loadings on PC", pca_num), x = "Original Variables", y = "Loading")  +
    theme(
      plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centra il titolo
    )
}

# Creazione dei grafici per PCA1, PCA2 e PCA3
plot_loadings(loading_pca1, 1)
plot_loadings(loading_pca2, 2)
plot_loadings(loading_pca3, 3)


# Vediamo se c'è una correlazine in base alla posizione territoriale (Nord, Sud , Centro)
# Calcola i centroidi delle regioni
region_means <- pca_data %>%
  group_by(Region) %>%
  summarise(Dim1_mean = mean(Dim.1), Dim2_mean = mean(Dim.2))
# Visualizza i centroidi per verifica
print(region_means)

# Ora interpretiamo le PC per assegnargli dei significati
# Estrarre le componenti principali
pc_scores <- as.data.frame(pca_result$ind$coord)

# Calcolare la matrice di correlazione tra variabili originali e PCA
correlation_matrix <- cor(data_scaled, pc_scores)

# Visualizzare la matrice di correlazione
print(correlation_matrix)
# Osserva quali variabili hanno le correlazioni più forti (positive o negative) con ciascuna PCA
# Nel nostro caso:
# PCA1 --> Correlazione fortemente positiva con quasi tutte le variabili, in particolare "Totale soggetti in carico" (0.99), "In carico all'inizio dell'anno" (0.98), "Presi in carico nell'anno" (0.98). Questa componente rappresenta probabilmente il volume complessivo di gestione dei soggetti tramite misure alternative, ovvero un indicatore della dimensione totale del carico del sistema.
# CONCETTO BASE PCA 1: può essere vista come una misura della dimensione operativa del sistema penale esterno, che riflette quanto il sistema sia carico di casi. È un indicatore del volume totale di gestione dei soggetti, ovvero quante persone entrano ed escono dal sistema e quante sono già in carico.
# -Valori positivi: Indicano un alto volume di gestione, con un sistema penale esterno attivo e una forte pressione amministrativa. Le regioni con valori positivi gestiscono molti soggetti, riflettendo una maggiore densità di popolazione o una politica più orientata all'utilizzo delle misure alternative.
# -Valori negativi: Indicano un basso volume di gestione, associato a regioni con minore pressione sul sistema penale. Questi valori possono essere legati a popolazioni meno numerose, a una capacità amministrativa inferiore o a un approccio meno sviluppato verso le misure alternative.

# PCA2 --> Maggiore correlazione positiva con "Lavoro di pubblica utilità totale" (0.64) e Maggiore correlazione negativa con "Detenzione domiciliare" (-0.44). Sembra separare le misure alternative alla detenzione (es., lavoro di pubblica utilità) dalle forme più tradizionali come la detenzione domiciliare. Potrebbe rappresentare la preferenza per soluzioni riabilitative moderne rispetto a quelle tradizionali.
# CONCETTO BASE PCA 2: La PCA 2 può essere interpretata come un indicatore di politica penale:
# -Valori positivi: Maggiore utilizzo di misure moderne come il lavoro di pubblica utilità.
# -Valori negativi: Predominanza di soluzioni tradizionali come la detenzione domiciliare.

# Riorganizzare la matrice per la visualizzazione
corr_melted <- melt(correlation_matrix)

# Creare la heatmap
ggplot(corr_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "darkred", high = "green3", mid = "white", midpoint = 0) +
  labs(title = "Correlation Matrix", x = "Original Variables", y = "Principal Component", fill = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))

# In base a tali osservazioni rinominiamo le PCA
pca_data <- pca_data %>% rename(
  "Volume Sistema Penale Esterno" = Dim.1,
  "Preferenza Soluzioni Riabilitative Moderne" = Dim.2
)

```


K-Mean Clustering
```{r}

# Selezioniamo le PCA 1 e 2
pca_kmeans <- pca_data %>% select(-Region, -Municipality, -Year, -Dim.3, -Dim.4, -Dim.5)

# Verifica numero ottimale di cluster tramite silhouette
fviz_nbclust(pca_kmeans, kmeans, method = "wss") +
  labs(title = "Optimal Number of Clusters") +  # Aggiungi il titolo
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centra il titolo
  )

km.res <- kmeans(pca_kmeans, 2)
sil <- silhouette(km.res$cluster, dist(pca_kmeans))
fviz_silhouette(sil)

km.res <- kmeans(pca_kmeans, 3)
sil <- silhouette(km.res$cluster, dist(pca_kmeans))
fviz_silhouette(sil)

km.res <- kmeans(pca_kmeans, 8)
sil <- silhouette(km.res$cluster, dist(pca_kmeans))
fviz_silhouette(sil)

km.res.2 <- kmeans(pca_kmeans, 3)

# Modifica i nomi dei cluster
km.res.2$cluster <- factor(km.res.2$cluster, 
                           levels = c(1, 2, 3), 
                           labels = c("AVERAGE", "LOW" , "HIGH"))

# Definisci i colori personalizzati per i cluster
cluster_colors <- c("LOW" = "lightcoral", "AVERAGE" = "orange", "HIGH" = "lightgreen")

# Visualizza il grafico con i cluster rinominati e i colori personalizzati
fviz_cluster(km.res.2, data = pca_kmeans, 
             geom = "point", 
             label = TRUE, 
             palette = cluster_colors) +
  theme_minimal() +
  labs(title = "K-Mean Clustering",
       x = "Volume of External Penal System",
       y = "Preference for Modern Rehabilitative Solutions") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))


# Troviamo la media di ogni cluster
aggregate(pca_kmeans, by=list(cluster=km.res.2$cluster), mean)

final_data_kmeans <- cbind(pca_kmeans, Cluster = km.res.2$cluster)

# Modifica la colonna Cluster con nomi descrittivi
final_data_kmeans <- final_data_kmeans %>%
  mutate(Cluster = case_when(
    Cluster == 1 ~ "AVERAGE",  # Se il Cluster è 1, diventa "MEDIO"
    Cluster == 2 ~ "LOW",  # Se il Cluster è 2, diventa "BASSO"
    Cluster == 3 ~ "HIGH",   # Se il Cluster è 3, diventa "ALTO"
    TRUE ~ as.character(Cluster)  # Mantieni il valore originale se non è 1, 2, o 3
  ))

```


Hierarchical Clustering (per confronto e conferma metodo K-Mean)
```{r}

# Selezioniamo le PCA 1 e 2
pca_hierarchical <- pca_data %>% select(-Region, -Municipality, -Year, -Dim.3, -Dim.4, -Dim.5)

# Definiamo linkage methods
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")

# Function to compute agglomerative coefficient
ac <- function(x) {
  agnes(pca_hierarchical, method = x)$ac
}

# Calcoliamo agglomerative coefficient per ogni clustering linkage method
sapply(m, ac)

# WARD SEEMS THE BEST IN AGGLOMERATIVE COEFFICIENT

# Perform hierarchical clustering using Ward's minimum variance
clust <- agnes(pca_hierarchical, method = "ward")

# Produce dendrogram
pltree(clust, cex = 0.6, hang = -1, main = "Dendrogram")

# NOW WE NEED TO SELECT THE NUMBER OF CLUSTER (SIMILAR TO THE K IN THE K MEANS)
# WE USE THE GAP STATISTICS

# Calculate gap statistic for each number of clusters (up to 5 clusters)
gap_stat <- clusGap(pca_hierarchical, FUN = hcut, nstart = 25, K.max = 5, B = 50)

# Produce plot of clusters vs. gap statistic
fviz_gap_stat(gap_stat) +
  labs(title = "Gap Statistic Plot") +  # Aggiungi il titolo
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centra il titolo
  )

# THE HIGHEST GAP STASTISTICS IS IN K=3

# Compute distance matrix
d <- dist(pca_hierarchical, method = "euclidean")
final_clust <- hclust(d, method = "ward.D2" )
groups <- cutree(final_clust, k=3)
plot(final_clust)
rect.hclust(final_clust, k = 3, border = "green")

pca_hierarchical$Region <- pca_data$Region
pca_hierarchical$Municipality <- pca_data$Municipality
pca_hierarchical$Year <- pca_data$Year


final_data_hierarchical <- cbind(pca_hierarchical, cluster = groups)
aggregate(final_data_hierarchical, by=list(cluster=final_data_hierarchical$cluster), mean)


# Modifica la colonna Cluster con nomi descrittivi
final_data_hierarchical$cluster <- factor(
  final_data_hierarchical$cluster,  # Colonna da convertire
  levels = c(2, 1, 3),              # Valori originali
  labels = c("LOW", "AVERAGE", "HIGH")  # Valori desiderati
)

# Grafico con colori personalizzati
ggplot(final_data_hierarchical) +
  aes(
    x = `Volume Sistema Penale Esterno`, 
    y = `Preferenza Soluzioni Riabilitative Moderne`, 
    colour = cluster, 
    fill = cluster
  ) +
  geom_point(shape = 21, size = 2, stroke = 0.5) +
  scale_colour_manual(values = c("LOW" = "lightcoral", "AVERAGE" = "orange", "HIGH" = "lightgreen")) +
  scale_fill_manual(values = c("LOW" = "lightcoral", "AVERAGE" = "orange", "HIGH" = "lightgreen")) +
  theme_minimal() +
  labs(title = "Hierarchical Clustering", x = "Volume of External Penal System", y = "Preference for Modern Rehabilitative Solutions") +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))

```


Esempi di grafici interpretativi K-Mean Clustering
```{r}

# Prima di tutto, aggiungiamo le colonne Region, Municipality e Year al dataset per poter fare le visualizzazioni
final_data_kmeans$Region <- pca_data$Region
final_data_kmeans$Municipality <- pca_data$Municipality
final_data_kmeans$Year <- pca_data$Year


# 1. Distribuzione dei Cluster per Regione
ggplot(final_data_kmeans, aes(x = Region, fill = as.factor(Cluster))) +
  geom_bar(position = "dodge") +
  labs(title = "Distribuzione dei Cluster per Regione",
       x = "Regione", y = "Conteggio", fill = "Cluster") + 
  scale_fill_manual(values = c("BASSO" = "lightcoral", "MEDIO" = "orange", "ALTO" = "lightgreen")) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  # Ruota le etichette sull'asse x
    plot.title = element_text(hjust = 0.5, face = "bold")  # Centra e rende in grassetto il titolo
  )


# 2. Heatmap: Volume Sistema Penale Esterno per Regione e Anno
ggplot(final_data_kmeans, aes(x = Year, y = Region, fill = `Volume Sistema Penale Esterno`)) +
  geom_tile() +
  labs(title = "Heatmap: Volume Sistema Penale Esterno per Regione e Anno", 
       x = "Anno", 
       y = "Regione") +
  scale_fill_gradient(low = "white", high = "blue") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")  # Centra e rende il titolo in grassetto
  )


# 3. Distribuzione del Volume Sistema Penale Esterno per Regione e Anno
p <- ggplot(final_data_kmeans, aes(x = Year, y = `Volume Sistema Penale Esterno`, color = Region)) +
  geom_point(aes(text = paste("Regione:", Region, "<br>Comune:", Municipality))) +  # Aggiunto regione e comune al tooltip
  labs(
    title = "Distribuzione del Volume Sistema Penale Esterno per Regione e Anno", 
    x = "Anno", 
    y = "Volume Sistema Penale Esterno"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")  # Titolo centrato e in grassetto
  )
# Rendi il grafico interattivo con tooltip personalizzato
ggplotly(p, tooltip = "text")


# 4. Grafico della distribuzione dei cluster nelle prime due componenti principali
ggplot(final_data_kmeans, aes(x = `Volume Sistema Penale Esterno`, y = `Preferenza Soluzioni Riabilitative Moderne`, color = as.factor(Cluster))) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(
    title = "Distribuzione dei Cluster (K-Mean Clustering) su PCA 1 e PCA 2",
    x = "Volume Sistema Penale Esterno", 
    y = "Preferenza Soluzioni Riabilitative Moderne", 
    color = "Cluster"
  ) +
  scale_color_manual(values = c("BASSO" = "lightcoral", "MEDIO" = "orange", "ALTO" = "lightgreen")) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")  # Titolo centrato e in grassetto
  )


# 5. Boxplot dei cluster per PCA 1, suddivisi per Regione
ggplot(final_data_kmeans, aes(x = as.factor(Cluster), y = `Volume Sistema Penale Esterno`, fill = as.factor(Cluster))) +
  geom_boxplot(outlier.shape = NA, alpha = 0.6) +  # Rimuove outlier dai boxplot (li mostreremo con i punti)
  geom_jitter(aes(color = as.factor(Cluster)), width = 0.2, size = 1.5, alpha = 0.8) +  # Aggiunge i punti con jitter
  theme_minimal() +
  labs(
    title = "Distribuzione per Cluster: Dimensione 1",
    x = "Cluster",
    y = "Volume Sistema Penale Esterno"
  ) +
  scale_fill_manual(values = c("lightgreen", "lightcoral", "orange")) +
  scale_color_manual(values = c("darkgreen", "darkred", "goldenrod")) +  # Colori per i punti
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")  # Titolo centrato e in grassetto
  )


# 6. Grafico a barre della media di PC1 per ciascun cluster, diviso per Regione
aggregate_data <- final_data_kmeans %>%
  group_by(Cluster, Region) %>%
  summarise(Dimensione1 = mean(`Volume Sistema Penale Esterno`))
ggplot(aggregate_data, aes(x = Region, y = Dimensione1, fill = as.factor(Cluster))) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Media di Volume Sistema Penale Esterno per Regione e Cluster",
    x = "Regione", 
    y = "Volume Sistema Penale Esterno",
    fill = "Cluster"
  ) +
  scale_fill_manual(values = c("lightgreen", "lightcoral", "orange")) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),  # Titolo centrato e in grassetto
    axis.text.x = element_text(angle = 45, hjust = 1)  # Ruota le etichette dell'asse X di 45°
  )


# 7. Andamento Media di Volume Sistema Penale Esterno per Anno e Cluster
aggregate_year <- final_data_kmeans %>%
  group_by(Cluster, Year) %>%
  summarise(Dimensione1 = mean(`Volume Sistema Penale Esterno`))
ggplot(aggregate_year, aes(x = as.factor(Year), y = Dimensione1, fill = as.factor(Cluster))) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Bar Plot of Time Trend", 
    x = "Year", 
    y = "Volume of External Penal System",
    fill = "Cluster"
  ) +
  scale_fill_manual(values = c("orange", "lightgreen", "lightcoral")) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")  # Titolo centrato e in grassetto
  )


# 8. Performance delle regioni e municipalità sulle dimensioni 1 e 2 per Anno
performance_by_region_municipality_cluster <- final_data_kmeans %>%
  group_by(Region, Municipality, Year, Cluster) %>%
  summarise(Dim1_mean = mean(`Volume Sistema Penale Esterno`, na.rm = TRUE),
            Dim2_mean = mean(`Preferenza Soluzioni Riabilitative Moderne`, na.rm = TRUE))
# Creiamo il grafico dinamico con plotly e animazione per anno
animated_plot <- plot_ly(performance_by_region_municipality_cluster, 
                         x = ~Dim1_mean, 
                         y = ~Dim2_mean, 
                         color = ~Region, 
                         frame = ~Year,   # Animazione per anno
                         text = ~paste("Comune:", Municipality),
                         hoverinfo = "text",  # Mostra le informazioni al passaggio
                         type = 'scatter', 
                         mode = 'markers', 
                         marker = list(size = 10)) %>%
  layout(
    title = list(
      text = "Performance delle regioni e comuni sulla PCA 1 e PCA 2 nei diversi anni",
      x = 0.5,  # Centra il titolo
      font = list(
        family = "Arial Black",  # Imposta un font in grassetto
        size = 16  # Specifica la dimensione del titolo
      )
    ),
    xaxis = list(title = "Volume Sistema Penale Esterno"),
    yaxis = list(title = "Preferenza Soluzioni Riabilitative Moderne"),
    updatemenus = list(
      list(
        type = 'buttons',
        showactive = FALSE,
        buttons = list(
          list(method = 'animate', args = list(NULL, list(frame = list(duration = 500, redraw = TRUE), mode = 'immediate', transition = list(duration = 300))))  # Animazione fluida
        )
      )
    )
  )
# Visualizza il grafico animato
animated_plot


# DA QUESTI ULTIMI DUE GRAFICI ANDIAMO A DIRE CHE LA NOSTRA DECISIONE è DI ANALIZZARE SOLO L'ANNO 2023 PERCHè LA SITUAZIONE è MOLTO SIMILE NEI DIVERSI ANNI
# FOCUS SU 2023 PERCHè RAPPRESENTATIVO ANCHE DEGLI ANNI PRECEDENTI 


# 9. Grafico confronto tra zone di riferimento e cluster (pov centroidi)
# Applica K-means ai centroidi delle regioni
kmeans_regions <- kmeans(region_means[, c("Dim1_mean", "Dim2_mean")], centers = 3)
# Aggiungi i cluster ai dati delle regioni
region_means$Cluster <- as.factor(kmeans_regions$cluster)
# Cambio nome Cluster
region_means$Cluster <- factor(region_means$Cluster, levels = c(1, 2, 3), labels = c("HIGH", "LOW", "AVERAGE"))
# Creazione del grafico
ggplot(region_means, aes(x = Dim1_mean, y = Dim2_mean, color = Cluster, label = Region)) +
  geom_point(size = 3, alpha = 0.8) +  # Ridotto il punto e aggiunta trasparenza
  geom_text_repel(size = 3, box.padding = 0.5, max.overlaps = 10) +  # Etichette dinamiche e spaziate
  theme_minimal() +
  labs(
    title = "Scatter Plot",
    x = "Volume of External Penal System",
    y = "Preference for Modern Rehabilitative Solutions",
    color = "Cluster"
  ) +
  scale_color_manual(values = c("LOW" = "lightcoral", "AVERAGE" = "orange", "HIGH" = "lightgreen")) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),  # Titolo centrato e in grassetto
    legend.position = "top"  # Legenda posizionata sopra il grafico
  )


# 10. Grafico Cluster delle regioni nello spazio delle PCA (POV AREA GEOGRAFICA)
# Aggiungi la macro-area geografica (Nord, Centro, Sud)
region_means$MacroArea <- case_when(
  region_means$Region %in% c("Lombardia", "Veneto", "Piemonte", "Liguria", "Emilia-Romagna", "Trentino-Alto Adige", "Friuli Venezia Giulia", "Valle d'Aosta") ~ "Northern",
  region_means$Region %in% c("Toscana", "Marche", "Lazio", "Umbria", "Abruzzo", "Molise") ~ "Central",
  region_means$Region %in% c("Campania", "Puglia", "Calabria", "Sicilia", "Sardegna", "Basilicata") ~ "Southern"
)
# Creazione del grafico statico
ggplot(region_means, aes(x = Dim1_mean, y = Dim2_mean, color = Cluster, shape = MacroArea)) +
  geom_point(size = 4, alpha = 0.8) +  # Punti con trasparenza
  geom_text_repel(aes(label = Region), size = 3, box.padding = 0.5, max.overlaps = 10) +  # Etichette ben distanziate
  theme_minimal() +
  labs(
    title = "Regional Clusters and Territorial Macro Areas",
    x = "Volume of External Penal System",
    y = "Preference for Modern Rehabilitative Solutions",
    color = "Cluster",  # Titolo per la legenda dei colori
    shape = "Macro-Areas"      # Titolo per la legenda delle forme
  ) +
  scale_color_manual(values = c("HIGH" = "lightgreen", "AVERAGE" = "orange", "LOW" = "lightcoral")) +  # Colori personalizzati per macro-aree
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),  # Titolo centrato e in grassetto
    legend.position = "top",  # Posiziona la legenda sopra il grafico
    legend.box = "vertical",  # Dividi la legenda su due piani (verticale)
    legend.box.spacing = unit(0.5, "cm"),  # Aggiungi spazio tra le legende
    axis.text = element_text(size = 10),  # Dimensione del testo degli assi
    legend.text = element_text(size = 10),  # Dimensione del testo nella legenda
    legend.title = element_text(face = "bold", size = 11)  # Titolo delle legende in grassetto
  )


# 11. Distribuzione dei comuni per Regione e Cluster (Anno 2023)
# Filtra i dati per l'anno 2023
interactive_data <- final_data_kmeans %>%
  filter(Year == 2023) %>%
  select(Municipality, Region, Cluster, `Volume Sistema Penale Esterno`, `Preferenza Soluzioni Riabilitative Moderne`)
# Crea una palette di colori per le regioni
region_colors <- colorRampPalette(brewer.pal(9, "Set1"))(length(unique(interactive_data$Region)))
# Assegna simboli ai cluster
interactive_data$symbol_cluster <- factor(interactive_data$Cluster, 
                                           levels = c("LOW", "AVERAGE", "HIGH"),
                                           labels = c("LOW", "AVERAGE", "HIGH"))
# Crea il grafico interattivo
interactive_plot <- plot_ly(data = interactive_data, 
                            x = ~`Volume Sistema Penale Esterno`, 
                            y = ~`Preferenza Soluzioni Riabilitative Moderne`, 
                            color = ~Region, 
                            colors = region_colors,
                            symbol = ~symbol_cluster, 
                            text = ~paste("Comune:", Municipality, 
                                          "<br>Regione:", Region, 
                                          "<br>Cluster:", Cluster),
                            hoverinfo = "text",  
                            type = 'scatter', 
                            mode = 'markers', 
                            marker = list(size = 10)) %>%
  layout(title = list(
           text = "Distribution of Municipalities by Region and Cluster (Year 2023)",
           x = 0.5,  # Centra il titolo
           font = list(
             size = 16, 
             family = "Arial Black"  # Titolo in grassetto
           )),
         xaxis = list(title = "Volume of External Penal System"),
         yaxis = list(title = "Preferences for Modern Rehabilitative Solutions"),
         legend = list(
           title = list(text = "Colours by Region and Shapes by Cluster"),
           itemsizing = "constant"
         ),
         showlegend = TRUE)
# Visualizza il grafico
interactive_plot

```
